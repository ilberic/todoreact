{"version":3,"sources":["Components/PostList/Categories/Category/Category.js","Components/PostList/Categories/Categories.js","Components/PostList/Posts/Post/Post.js","Components/PostList/Posts/Posts.js","Components/PostList/PostList.js","Components/AddPost/CategoryAdd/CategoryAdd.js","Components/AddPost/AddPost.js","App.js","index.js"],"names":["Category","this","props","categorySort","categoryTitle","categoryChoose","categoryChosen","className","style","backgroundColor","color","onClick","sortCategories","bind","Component","Categories","state","text","e","setState","target","value","length","newCategory","id","chosen","onCategoryStateChange","data","newArr","storeSet","storeGet","alert","categoryState","map","category","i","key","categoriesData","placeholder","onChange","onTitleChange","addNewCategory","Post","PostTitle","PostDescr","look","important","deletePost","src","alt","Posts","importantSort","posts","post","PostList","CategoryAdd","addCategoryChosen","onCategoryChange","addChosen","AddPost","title","descr","addPost","categoriesArr","onDescrChange","type","min","max","step","onImportantChange","addNewPost","App","store","obj","sort","a","b","newItem","Math","random","categoryName","index","findIndex","elem","before","slice","after","arr","window","undefined","render","path","exact","to","rerenderEntireTree","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3107601c.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport './Category.sass'\n\nexport default class Category extends Component {\n    sortCategories() {\n        this.props.categorySort(this.props.categoryTitle)\n        this.props.categoryChoose(this.props.categoryTitle)\n    }\n\n    color() {\n        if (this.props.categoryChosen) {\n            return '#fff'\n        } else {\n            return '#bdbdbd'\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"category__item\" style={{backgroundColor: this.color()}}\n                 onClick={this.sortCategories.bind(this)}>\n                {this.props.categoryTitle}\n            </div>\n        )\n    }\n\n}\n","import React, {Component} from \"react\";\nimport './Categories.sass'\nimport Category from \"./Category/Category\";\n\n\nexport default class Categories extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: \"\"\n        }\n    }\n\n    onTitleChange(e) {\n        this.setState(\n            {\n                text: e.target.value\n            }\n        )\n    }\n\n    addNewCategory() {\n        if (this.state.text.length > 4) {\n            const newCategory = {\n                categoryTitle: this.state.text,\n                id: 4,\n                chosen: false\n            }\n            this.props.onCategoryStateChange(\n                ({data}) => {\n                    let newArr = [...data, newCategory];\n                    this.props.storeSet('data', newArr)\n                    return {\n                        data: this.props.storeGet('data')\n                    }\n                }\n            )\n            this.setState({\n                text: \"\"\n            })\n            alert('Новая категория успешно добавлена!')\n        } else {\n            alert('Некорректные данные! Название должно содержать не менее 4 символов.')\n        }\n    }\n\n    render() {\n        const arr = this.props.categoryState;\n        const newArr = arr.map((category, i) => <Category categoryChoose={this.props.categoryChosen}\n                                                          key={i}\n                                                          categoryChosen={category.chosen}\n                                                          categoriesData={this.props.categoryState.categoryTitle}\n                                                          categorySort={this.props.categorySort}\n                                                          categoryTitle={category.categoryTitle}/>);\n        return (\n            <div className=\"categories__wrapper\">\n                <div className=\"categories__wrapper-items\">\n                    {newArr}\n                </div>\n                <div className=\"categories__wrapper-new\">\n                    <input placeholder=\"Новая категория\" value={this.state.text}\n                           onChange={this.onTitleChange.bind(this)} id=\"category__name\"/>\n                    <div className=\"categories__wrapper-btn\" onClick={this.addNewCategory.bind(this)}>+</div>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport './Post.sass'\n\nconst Post = ({PostTitle, PostDescr, look, important, deletePost}) => {\n    if (look === true) {\n        look = \"active\"\n    } else {\n        look = \"\"\n    }\n\n    function postDelete () {\n        deletePost(PostTitle)\n    }\n\n    let color\n    if (important === \"1\") {\n        color = \"#bed169\"\n    } else if (important === \"2\") {\n        color = \"#d47657\"\n    } else {\n        color = \"#a8e0b7\"\n    }\n\n    return (\n        <div className={`post__wrapper ${look}`} style={{backgroundColor: color}}>\n            <div className=\"post__wrapper-text\">\n                <span className=\"post__wrapper-text_title\">\n                    {PostTitle}\n                </span>\n                <span className=\"post__wrapper-text_descr\">\n                    {PostDescr}\n                </span>\n            </div>\n            <div className=\"post__wrapper-btn\" onClick={postDelete}>\n                <img src=\"https://www.flaticon.com/svg/static/icons/svg/1828/1828743.svg\" alt=\"check\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Post","import React, {Component} from \"react\";\nimport './Posts.sass'\nimport Post from \"./Post/Post\";\n\nexport default class Posts extends Component {\n    render() {\n\n        this.props.importantSort()\n        let newArr = this.props.posts.map((post, i) => <Post key={i}\n                                                             important={post.important}\n                                                             look={post.look}\n                                                             PostTitle={post.PostTitle}\n                                                             PostDescr={post.PostDescr}\n                                                             deletePost={this.props.deletePost}\n                                                        />)\n\n        return (\n            <div className=\"posts__wrapper\">\n                {newArr}\n            </div>\n        )\n    }\n\n\n}\n","import React, {Component} from \"react\";\nimport './PostList.sass'\nimport Categories from \"./Categories/Categories\";\nimport Posts from \"./Posts/Posts\";\n\nexport default class PostList extends Component {\n    render() {\n        return (\n            <div className=\"postlist__wrapper\">\n                <Categories categoryChosen={this.props.categoryChosen}\n                            onCategoryStateChange={this.props.onCategoryStateChange}\n                            categoryState={this.props.categoryState}\n                            categorySort={this.props.categorySort}\n                            storeSet={this.props.storeSet}\n                            storeGet={this.props.storeGet}\n                            />\n                <Posts posts={this.props.posts} importantSort={this.props.importantSort}\n                       deletePost={this.props.deletePost}\n                       />\n            </div>\n        )\n    }\n}\n","import React, {Component} from \"react\"\n\nexport default class CategoryAdd extends Component{\n    category() {\n        this.props.addCategoryChosen(this.props.categoryTitle);\n        this.props.onCategoryChange(this.props.categoryTitle);\n    }\n\n    color() {\n        if (this.props.addChosen) {\n            return '#fff'\n        } else {\n            return '#bdbdbd'\n        }\n    }\n    render() {\n        return (\n            <span onClick={this.category.bind(this)} style={{backgroundColor: this.color()}}>{this.props.categoryTitle}</span>\n        )\n    }\n\n\n}\n","import React, {Component} from \"react\";\nimport './AddPost.sass'\nimport CategoryAdd from \"./CategoryAdd/CategoryAdd\";\n\nexport default class AddPost extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\",\n            descr: \"\",\n            important: 0,\n            category: \"\"\n        }\n    }\n\n    onTitleChange(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onDescrChange(e) {\n        this.setState({\n            descr: e.target.value\n        });\n    }\n\n    onImportantChange(e) {\n        this.setState({\n            important: e.target.value\n        });\n    }\n\n    onCategoryChange(categoryTitle) {\n        this.setState({\n            category: categoryTitle\n        })\n    }\n\n    addNewPost() {\n        if (this.state.title.length > 5 && this.state.descr.length > 5) {\n            this.props.addPost(this.state.title, this.state.descr, this.state.important, this.state.category)\n            this.setState({\n                title: \"\",\n                descr: \"\",\n                important: 0\n            })\n\n            alert('Новая задача успешно добавлена!')\n        } else {\n            alert('Некорректные данные! Поля должны содержать не менее 5 символов.')\n        }\n    }\n\n    render() {\n        let categoriesArr = this.props.categoryState.map(category => <CategoryAdd\n            onCategoryChange={this.onCategoryChange.bind(this)}\n            addChosen={category.addChosen}\n            categoryTitle={category.categoryTitle}\n            addCategoryChosen={this.props.addCategoryChosen}\n        />)\n        return (\n            <div className=\"addpost__wrapper\">\n                <input placeholder=\"Что надо сделать (Кратко)?\" value={this.state.title}\n                       onChange={this.onTitleChange.bind(this)}/>\n                <input placeholder=\"А поподробнее?\" value={this.state.descr} onChange={this.onDescrChange.bind(this)}/>\n                <div>\n                    <span>Насколько срочно?</span>\n                    <input type=\"range\" min=\"0\" max=\"2\" step=\"1\" value={this.state.important}\n                           onChange={this.onImportantChange.bind(this)}/>\n                </div>\n                <div className=\"categoryadd\">\n                    <span>Выберите категорию:</span>\n                    <div className=\"categoryadd__wrapper\">\n                        {categoriesArr}\n                    </div>\n                </div>\n\n                <div className=\"addpost__wrapper-btn\" onClick={this.addNewPost.bind(this)}>\n                    Добавить\n                </div>\n            </div>\n        )\n    }\n\n}\n","import React, {Component} from 'react';\nimport './App.sass';\nimport PostList from \"./Components/PostList/PostList\";\nimport AddPost from \"./Components/AddPost/AddPost\";\nimport {Route} from \"react-router-dom\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport {NavLink} from \"react-router-dom\"\nimport * as store from \"store\";\n\n\nexport default class App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: store.get(\"data\"),\n            posts: store.get(\"posts\")\n        }\n    }\n\n    onCategoryStateChange(obj) {\n        this.setState(obj)\n    }\n\n    importantSort() {\n            this.state.posts = this.state.posts.sort((a, b) => b.important - a.important);\n    }\n\n    addPost(title, descr, important, category) {\n        const newItem = {\n            PostTitle: title,\n            PostDescr: descr,\n            important: important,\n            id: Math.random(),\n            look: true,\n            category: category\n        }\n        this.setState(({posts}) => {\n            const newArr = [...posts, newItem];\n            store.set(\"posts\", newArr);\n            return ({\n                posts: newArr\n            })\n        })\n\n\n    };\n\n    categorySort(categoryName) {\n        this.setState(({posts}) => {\n            let newArr = posts.map(post => {\n                if (post.category === categoryName) {\n                    return {\n                        important: post.important,\n                        PostTitle: post.PostTitle,\n                        PostDescr: post.PostDescr,\n                        category: post.category,\n                        id: post.id,\n                        look: true\n                    }\n                } else if (categoryName === \"Все категории\") {\n                    return {\n                        important: post.important,\n                        PostTitle: post.PostTitle,\n                        PostDescr: post.PostDescr,\n                        category: post.category,\n                        id: post.id,\n                        look: true\n                    }\n                } else {\n                    return {\n                        important: post.important,\n                        PostTitle: post.PostTitle,\n                        PostDescr: post.PostDescr,\n                        category: post.category,\n                        id: post.id,\n                        look: false\n                    }\n                }\n            })\n            return {\n                posts: newArr\n            }\n        })\n    }\n\n    categoryChosen(categoryName) {\n        this.setState(({data}) => {\n            let newArr = data.map(category => {\n                if (category.categoryTitle === categoryName) {\n                    return {categoryTitle: category.categoryTitle, id: 0, chosen: true}\n                } else {\n                    return {categoryTitle: category.categoryTitle, id: 0, chosen: false}\n                }\n            })\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    addCategoryChosen(categoryName) {\n        this.setState(({data}) => {\n            let newArr = data.map(category => {\n                if (category.categoryTitle === categoryName) {\n                    return {categoryTitle: category.categoryTitle, id: 0, chosen: true, addChosen: true}\n                } else {\n                    return {categoryTitle: category.categoryTitle, id: 0, chosen: false, addChosen: false}\n                }\n            })\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    deletePost(PostTitle) {\n        const index = this.state.posts.findIndex((elem) => elem.PostTitle === PostTitle);\n        const before = this.state.posts.slice(0, index);\n        const after = this.state.posts.slice(index + 1);\n        const newArr = [...before, ...after];\n\n        store.set(\"posts\", newArr)\n\n        this.setState(() => {\n            return {\n                posts: store.get('posts')\n            }\n        });\n    }\n\n    storeSet (data, arr) {\n        return store.set(data, arr)\n    }\n\n    storeGet (data) {\n        return store.get(data)\n    }\n\n\n\n    render() {\n        window.state = this.state\n        if (this.state.posts === undefined)    {\n            store.set(\"posts\", [])\n        }\n        if (this.state.posts === undefined)    {\n            store.set(\"data\", [{categoryTitle: \"Все категории\", id: 0, chosen: true, addChosen: true}])\n        }\n        return (\n            <BrowserRouter>\n                <div className=\"container\">\n                    <div className=\"logo\">\n                        <span>To</span>\n                        <span>dO</span>\n                    </div>\n                    <Route render={() => <PostList categoryChosen={this.categoryChosen.bind(this)}\n                                                   onCategoryStateChange={this.onCategoryStateChange.bind(this)}\n                                                   importantSort={this.importantSort.bind(this)}\n                                                   categorySort={this.categorySort.bind(this)} posts={this.state.posts}\n                                                   categoryState={this.state.data}\n                                                   deletePost={this.deletePost.bind(this)}\n                                                   storeSet={this.storeSet.bind(this)}\n                                                   storeGet={this.storeGet.bind(this)}\n                                                   />} path=\"/\" exact/>\n                    <Route render={() => <AddPost categoryState={this.state.data}\n                                                  addCategoryChosen={this.addCategoryChosen.bind(this)}\n                                                  addPost={this.addPost.bind(this)}/>} path=\"/add\"\n                                                  exact/>\n                    <Route render={() => <NavLink className=\"button\" to=\"/\">Вернуться к задачам</NavLink>} exact\n                           path=\"/add\"/>\n                    <Route render={() => <NavLink className=\"button\" to=\"/add\">Добавить задачу</NavLink>} exact\n                           path=\"/\"/>\n                </div>\n            </BrowserRouter>\n        )\n    };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap-grid.min.css'\nimport './index.css';\nimport App from './App';\n\nexport default function rerenderEntireTree ()   {\n    ReactDOM.render(\n        <App />,\n        document.getElementById('root')\n    );\n}\n\nrerenderEntireTree();\n"],"sourceRoot":""}